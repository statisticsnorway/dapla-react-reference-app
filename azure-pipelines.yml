name: $(Build.SourceBranch)-$(date:yyyyMMdd)$(rev:.r)

trigger:
  branches:
    include:
      - master

variables:
  - group: Hemmeligheter
  - name: fullSha
    value: '$(Build.SourceVersion)'
  - name: imageName
    value: 'prod-bip/ssb/dapla/react-reference-app'

resources:
  containers:
    - container: uLatest
      image: ubuntu:latest

jobs:
  - job: getDependencies
    pool:
      vmImage: 'ubuntu-latest'
    displayName: 'Get application dependencies'
    steps:
      - script: 'yarn install'
    strategy:
      matrix:
        ubuntuLatest:
          containerResource: uLatest
    container: $[ variables['containerResource'] ]
  - job: testApplication
    pool:
      vmImage: 'ubuntu-latest'
    displayName: 'Run test and coverage reporting'
    dependsOn: getDependencies
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    steps:
      - script: |
          ls -l ./node_modules
          CI=true yarn coverage
    strategy:
      matrix:
        ubuntuLatest:
          containerResource: uLatest
    container: $[ variables['containerResource'] ]
  - job: buildApplication
    pool:
      vmImage: 'ubuntu-latest'
    displayName: 'Build Application'
    dependsOn: getDependencies
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    steps:
      - script: 'CI=true yarn build'
    strategy:
      matrix:
        ubuntuLatest:
          containerResource: uLatest
    container: $[ variables['containerResource'] ]
  - job: analyzeCode
    pool:
      vmImage: 'ubuntu-latest'
    displayName: 'Run code analysis'
    dependsOn: testApplication
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    steps:
      - task: SonarQubePrepare@4
        inputs:
          SonarQube: 'bipSonarQube'
          scannerMode: 'CLI'
          configMode: 'manual'
          cliProjectKey: '$(SONAR_TOKEN)'
          cliSources: '.'
      - task: SonarQubeAnalyze@4
    strategy:
      matrix:
        ubuntuLatest:
          containerResource: uLatest
    container: $[ variables['containerResource'] ]
  - job: buildAndPushDocker
    pool:
      vmImage: 'ubuntu-latest'
    displayName: 'Build and push Docker image'
    dependsOn: buildApplication
    steps:
      - task: Docker@2
        condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
        displayName: 'Login to GCR'
        inputs:
          command: login
          containerRegistry: gcrServiceConnection
      - task: Docker@2
        condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
        inputs:
          containerRegistry: 'gcrServiceConnection'
          repository: '$(imageName)'
          command: 'buildAndPush'
          Dockerfile: 'Dockerfile'
          tags: '$(Build.SourceBranchName)-imagescan-$(fullSha)'
    strategy:
      matrix:
        ubuntuLatest:
          containerResource: uLatest
    container: $[ variables['containerResource'] ]
